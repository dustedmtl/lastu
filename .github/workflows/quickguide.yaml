name: Generate PDF Documentation

on:
  push:
    tags:
      - 'd*' # Matching documentation

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      VERSION: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set new env variable
        run: |
          NEWVER=$(echo "${{ env.VERSION }}" | cut -c 2-)
          echo "New variable value is $NEWVER"
          echo "NEWVER=$NEWVER" >> $GITHUB_ENV

      - name: Use the version number
        run: |
          echo "Version number is ${{ env.VERSION }}"
          echo "New variable value is ${{ env.NEWVER }}"

      - name: Install Pandoc
        run: sudo apt-get install pandoc texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra

      - name: Build PDF documentation
        run: pandoc --from gfm --verbose --standalone --variable=colorlinks --variable=urlcolor=blue -o "/tmp/userguide-${{ env.NEWVER }}.pdf" docs/USERGUIDE.md docs/SAMPLES.md docs/TECHINFO.md docs/LICENSE.md > /tmp/output.log 2>&1
        continue-on-error: true
  
#      - name: List directory
#        run: ls -l . /tmp .github/workflows

      - name: View output log
        run: cat /tmp/output.log
  
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v2
        with:
          name: userguide
          path: "/tmp/userguide-${{ env.NEWVER }}.pdf"

#      - name: Upload artifact to OSF
#        uses: abmv/osf-upload@v1.2.1
#        with:
#          osf-token: ${{ secrets.OSF_TOKEN }}
#          osf-target: "https://osf.io/${{ env.OSF_PROJECT_ID }}/"
#          osf-source: "/tmp/userguide-${{ env.NEWVER }}.pdf"
#          osf-target-component: "software/documentation"
